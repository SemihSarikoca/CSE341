Grammar

    0 $accept: START $end

    1 START: INPUT

    2 INPUT: EXPLIST
    3      | LOAD INPUT

    4 EXPLIST: EXPLIST EXP
    5        | EXP

    6 EXP: IDENTIFIER
    7    | VALUEF
    8    | ARITHMETIC_EXP
    9    | BOOLEAN
   10    | LOGICAL_EXP
   11    | FCALL
   12    | FUNCTION_DEF
   13    | LIST
   14    | ASSIGNMENT
   15    | CONTROL_STATEMENT
   16    | DISPLAY
   17    | EXIT

   18 ARITHMETIC_EXP: OP_OP OP_PLUS EXP EXP OP_CP
   19               | OP_OP OP_MINUS EXP EXP OP_CP
   20               | OP_OP OP_MULT EXP EXP OP_CP
   21               | OP_OP OP_DIV EXP EXP OP_CP

   22 LOGICAL_EXP: OP_OP KW_AND EXP EXP OP_CP
   23            | OP_OP KW_OR EXP EXP OP_CP
   24            | OP_OP KW_NOT EXP OP_CP
   25            | OP_OP KW_EQUAL EXP EXP OP_CP
   26            | OP_OP KW_LESS EXP EXP OP_CP

   27 BOOLEAN: KW_TRUE
   28        | KW_FALSE

   29 ASSIGNMENT: OP_OP KW_SET IDENTIFIER EXPLIST OP_CP

   30 FCALL: OP_OP IDENTIFIER EXP OP_CP

   31 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP

   32 CONTROL_STATEMENT: OP_OP KW_IF EXP EXP OP_CP
   33                  | OP_OP KW_IF EXP EXP EXP OP_CP
   34                  | OP_OP KW_WHILE OP_OP EXP OP_CP EXPLIST OP_CP
   35                  | OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP

   36 DISPLAY: OP_OP KW_DISP EXP OP_CP

   37 EXIT: OP_OP KW_EXIT OP_CP

   38 LIST: KW_NIL
   39     | OP_OP KW_LIST OP_CP
   40     | OP_OP KW_LIST OP_OP VALUES OP_CP OP_CP
   41     | OP_OP KW_APPEND LIST EXP OP_CP
   42     | OP_OP KW_CONCAT LIST LIST OP_CP

   43 VALUES: VALUES OP_COMMA VALUEF
   44       | VALUEF

   45 LOAD: OP_OP KW_LOAD IDENTIFIER OP_CP


Terminals, with rules where they appear

$end (0) 0
error (256)
VALUEF (258) 7 43 44
IDENTIFIER (259) 6 29 30 31 35 45
OP_PLUS (260) 18
OP_MINUS (261) 19
OP_MULT (262) 20
OP_DIV (263) 21
OP_OP (264) 18 19 20 21 22 23 24 25 26 29 30 31 32 33 34 35 36 37 39
    40 41 42 45
OP_CP (265) 18 19 20 21 22 23 24 25 26 29 30 31 32 33 34 35 36 37 39
    40 41 42 45
OP_COMMA (266) 43
KW_SET (267) 29
KW_DEFFUN (268) 31
KW_IF (269) 32 33
KW_WHILE (270) 34
KW_FOR (271) 35
KW_LIST (272) 39 40
KW_EXIT (273) 37
KW_APPEND (274) 41
KW_CONCAT (275) 42
KW_DISP (276) 36
KW_LOAD (277) 45
KW_TRUE (278) 27
KW_FALSE (279) 28
KW_AND (280) 22
KW_OR (281) 23
KW_NOT (282) 24
KW_EQUAL (283) 25
KW_LESS (284) 26
KW_NIL (285) 38


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
START (32)
    on left: 1, on right: 0
INPUT (33)
    on left: 2 3, on right: 1 3
EXPLIST (34)
    on left: 4 5, on right: 2 4 29 34 35
EXP (35)
    on left: 6 7 8 9 10 11 12 13 14 15 16 17, on right: 4 5 18 19 20
    21 22 23 24 25 26 30 31 32 33 34 35 36 41
ARITHMETIC_EXP (36)
    on left: 18 19 20 21, on right: 8
LOGICAL_EXP (37)
    on left: 22 23 24 25 26, on right: 10
BOOLEAN (38)
    on left: 27 28, on right: 9
ASSIGNMENT (39)
    on left: 29, on right: 14
FCALL (40)
    on left: 30, on right: 11
FUNCTION_DEF (41)
    on left: 31, on right: 12
CONTROL_STATEMENT (42)
    on left: 32 33 34 35, on right: 15
DISPLAY (43)
    on left: 36, on right: 16
EXIT (44)
    on left: 37, on right: 17
LIST (45)
    on left: 38 39 40 41 42, on right: 13 41 42
VALUES (46)
    on left: 43 44, on right: 40 43
LOAD (47)
    on left: 45, on right: 3


state 0

    0 $accept: . START $end

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    START              go to state 7
    INPUT              go to state 8
    EXPLIST            go to state 9
    EXP                go to state 10
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20
    LOAD               go to state 21


state 1

    7 EXP: VALUEF .

    $default  reduce using rule 7 (EXP)


state 2

    6 EXP: IDENTIFIER .

    $default  reduce using rule 6 (EXP)


state 3

   18 ARITHMETIC_EXP: OP_OP . OP_PLUS EXP EXP OP_CP
   19               | OP_OP . OP_MINUS EXP EXP OP_CP
   20               | OP_OP . OP_MULT EXP EXP OP_CP
   21               | OP_OP . OP_DIV EXP EXP OP_CP
   22 LOGICAL_EXP: OP_OP . KW_AND EXP EXP OP_CP
   23            | OP_OP . KW_OR EXP EXP OP_CP
   24            | OP_OP . KW_NOT EXP OP_CP
   25            | OP_OP . KW_EQUAL EXP EXP OP_CP
   26            | OP_OP . KW_LESS EXP EXP OP_CP
   29 ASSIGNMENT: OP_OP . KW_SET IDENTIFIER EXPLIST OP_CP
   30 FCALL: OP_OP . IDENTIFIER EXP OP_CP
   31 FUNCTION_DEF: OP_OP . KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP
   32 CONTROL_STATEMENT: OP_OP . KW_IF EXP EXP OP_CP
   33                  | OP_OP . KW_IF EXP EXP EXP OP_CP
   34                  | OP_OP . KW_WHILE OP_OP EXP OP_CP EXPLIST OP_CP
   35                  | OP_OP . KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP
   36 DISPLAY: OP_OP . KW_DISP EXP OP_CP
   37 EXIT: OP_OP . KW_EXIT OP_CP
   39 LIST: OP_OP . KW_LIST OP_CP
   40     | OP_OP . KW_LIST OP_OP VALUES OP_CP OP_CP
   41     | OP_OP . KW_APPEND LIST EXP OP_CP
   42     | OP_OP . KW_CONCAT LIST LIST OP_CP
   45 LOAD: OP_OP . KW_LOAD IDENTIFIER OP_CP

    IDENTIFIER  shift, and go to state 22
    OP_PLUS     shift, and go to state 23
    OP_MINUS    shift, and go to state 24
    OP_MULT     shift, and go to state 25
    OP_DIV      shift, and go to state 26
    KW_SET      shift, and go to state 27
    KW_DEFFUN   shift, and go to state 28
    KW_IF       shift, and go to state 29
    KW_WHILE    shift, and go to state 30
    KW_FOR      shift, and go to state 31
    KW_LIST     shift, and go to state 32
    KW_EXIT     shift, and go to state 33
    KW_APPEND   shift, and go to state 34
    KW_CONCAT   shift, and go to state 35
    KW_DISP     shift, and go to state 36
    KW_LOAD     shift, and go to state 37
    KW_AND      shift, and go to state 38
    KW_OR       shift, and go to state 39
    KW_NOT      shift, and go to state 40
    KW_EQUAL    shift, and go to state 41
    KW_LESS     shift, and go to state 42


state 4

   27 BOOLEAN: KW_TRUE .

    $default  reduce using rule 27 (BOOLEAN)


state 5

   28 BOOLEAN: KW_FALSE .

    $default  reduce using rule 28 (BOOLEAN)


state 6

   38 LIST: KW_NIL .

    $default  reduce using rule 38 (LIST)


state 7

    0 $accept: START . $end

    $end  shift, and go to state 43


state 8

    1 START: INPUT .

    $default  reduce using rule 1 (START)


state 9

    2 INPUT: EXPLIST .
    4 EXPLIST: EXPLIST . EXP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    $default  reduce using rule 2 (INPUT)

    EXP                go to state 45
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 10

    5 EXPLIST: EXP .

    $default  reduce using rule 5 (EXPLIST)


state 11

    8 EXP: ARITHMETIC_EXP .

    $default  reduce using rule 8 (EXP)


state 12

   10 EXP: LOGICAL_EXP .

    $default  reduce using rule 10 (EXP)


state 13

    9 EXP: BOOLEAN .

    $default  reduce using rule 9 (EXP)


state 14

   14 EXP: ASSIGNMENT .

    $default  reduce using rule 14 (EXP)


state 15

   11 EXP: FCALL .

    $default  reduce using rule 11 (EXP)


state 16

   12 EXP: FUNCTION_DEF .

    $default  reduce using rule 12 (EXP)


state 17

   15 EXP: CONTROL_STATEMENT .

    $default  reduce using rule 15 (EXP)


state 18

   16 EXP: DISPLAY .

    $default  reduce using rule 16 (EXP)


state 19

   17 EXP: EXIT .

    $default  reduce using rule 17 (EXP)


state 20

   13 EXP: LIST .

    $default  reduce using rule 13 (EXP)


state 21

    3 INPUT: LOAD . INPUT

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    INPUT              go to state 46
    EXPLIST            go to state 9
    EXP                go to state 10
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20
    LOAD               go to state 21


state 22

   30 FCALL: OP_OP IDENTIFIER . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 47
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 23

   18 ARITHMETIC_EXP: OP_OP OP_PLUS . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 48
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 24

   19 ARITHMETIC_EXP: OP_OP OP_MINUS . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 49
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 25

   20 ARITHMETIC_EXP: OP_OP OP_MULT . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 50
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 26

   21 ARITHMETIC_EXP: OP_OP OP_DIV . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 51
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 27

   29 ASSIGNMENT: OP_OP KW_SET . IDENTIFIER EXPLIST OP_CP

    IDENTIFIER  shift, and go to state 52


state 28

   31 FUNCTION_DEF: OP_OP KW_DEFFUN . IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP

    IDENTIFIER  shift, and go to state 53


state 29

   32 CONTROL_STATEMENT: OP_OP KW_IF . EXP EXP OP_CP
   33                  | OP_OP KW_IF . EXP EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 54
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 30

   34 CONTROL_STATEMENT: OP_OP KW_WHILE . OP_OP EXP OP_CP EXPLIST OP_CP

    OP_OP  shift, and go to state 55


state 31

   35 CONTROL_STATEMENT: OP_OP KW_FOR . OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP

    OP_OP  shift, and go to state 56


state 32

   39 LIST: OP_OP KW_LIST . OP_CP
   40     | OP_OP KW_LIST . OP_OP VALUES OP_CP OP_CP

    OP_OP  shift, and go to state 57
    OP_CP  shift, and go to state 58


state 33

   37 EXIT: OP_OP KW_EXIT . OP_CP

    OP_CP  shift, and go to state 59


state 34

   41 LIST: OP_OP KW_APPEND . LIST EXP OP_CP

    OP_OP   shift, and go to state 60
    KW_NIL  shift, and go to state 6

    LIST  go to state 61


state 35

   42 LIST: OP_OP KW_CONCAT . LIST LIST OP_CP

    OP_OP   shift, and go to state 60
    KW_NIL  shift, and go to state 6

    LIST  go to state 62


state 36

   36 DISPLAY: OP_OP KW_DISP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 63
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 37

   45 LOAD: OP_OP KW_LOAD . IDENTIFIER OP_CP

    IDENTIFIER  shift, and go to state 64


state 38

   22 LOGICAL_EXP: OP_OP KW_AND . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 65
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 39

   23 LOGICAL_EXP: OP_OP KW_OR . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 66
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 40

   24 LOGICAL_EXP: OP_OP KW_NOT . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 67
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 41

   25 LOGICAL_EXP: OP_OP KW_EQUAL . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 68
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 42

   26 LOGICAL_EXP: OP_OP KW_LESS . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 69
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 43

    0 $accept: START $end .

    $default  accept


state 44

   18 ARITHMETIC_EXP: OP_OP . OP_PLUS EXP EXP OP_CP
   19               | OP_OP . OP_MINUS EXP EXP OP_CP
   20               | OP_OP . OP_MULT EXP EXP OP_CP
   21               | OP_OP . OP_DIV EXP EXP OP_CP
   22 LOGICAL_EXP: OP_OP . KW_AND EXP EXP OP_CP
   23            | OP_OP . KW_OR EXP EXP OP_CP
   24            | OP_OP . KW_NOT EXP OP_CP
   25            | OP_OP . KW_EQUAL EXP EXP OP_CP
   26            | OP_OP . KW_LESS EXP EXP OP_CP
   29 ASSIGNMENT: OP_OP . KW_SET IDENTIFIER EXPLIST OP_CP
   30 FCALL: OP_OP . IDENTIFIER EXP OP_CP
   31 FUNCTION_DEF: OP_OP . KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP
   32 CONTROL_STATEMENT: OP_OP . KW_IF EXP EXP OP_CP
   33                  | OP_OP . KW_IF EXP EXP EXP OP_CP
   34                  | OP_OP . KW_WHILE OP_OP EXP OP_CP EXPLIST OP_CP
   35                  | OP_OP . KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP
   36 DISPLAY: OP_OP . KW_DISP EXP OP_CP
   37 EXIT: OP_OP . KW_EXIT OP_CP
   39 LIST: OP_OP . KW_LIST OP_CP
   40     | OP_OP . KW_LIST OP_OP VALUES OP_CP OP_CP
   41     | OP_OP . KW_APPEND LIST EXP OP_CP
   42     | OP_OP . KW_CONCAT LIST LIST OP_CP

    IDENTIFIER  shift, and go to state 22
    OP_PLUS     shift, and go to state 23
    OP_MINUS    shift, and go to state 24
    OP_MULT     shift, and go to state 25
    OP_DIV      shift, and go to state 26
    KW_SET      shift, and go to state 27
    KW_DEFFUN   shift, and go to state 28
    KW_IF       shift, and go to state 29
    KW_WHILE    shift, and go to state 30
    KW_FOR      shift, and go to state 31
    KW_LIST     shift, and go to state 32
    KW_EXIT     shift, and go to state 33
    KW_APPEND   shift, and go to state 34
    KW_CONCAT   shift, and go to state 35
    KW_DISP     shift, and go to state 36
    KW_AND      shift, and go to state 38
    KW_OR       shift, and go to state 39
    KW_NOT      shift, and go to state 40
    KW_EQUAL    shift, and go to state 41
    KW_LESS     shift, and go to state 42


state 45

    4 EXPLIST: EXPLIST EXP .

    $default  reduce using rule 4 (EXPLIST)


state 46

    3 INPUT: LOAD INPUT .

    $default  reduce using rule 3 (INPUT)


state 47

   30 FCALL: OP_OP IDENTIFIER EXP . OP_CP

    OP_CP  shift, and go to state 70


state 48

   18 ARITHMETIC_EXP: OP_OP OP_PLUS EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 71
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 49

   19 ARITHMETIC_EXP: OP_OP OP_MINUS EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 72
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 50

   20 ARITHMETIC_EXP: OP_OP OP_MULT EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 73
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 51

   21 ARITHMETIC_EXP: OP_OP OP_DIV EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 74
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 52

   29 ASSIGNMENT: OP_OP KW_SET IDENTIFIER . EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXPLIST            go to state 75
    EXP                go to state 10
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 53

   31 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER . OP_OP IDENTIFIER OP_CP EXP OP_CP

    OP_OP  shift, and go to state 76


state 54

   32 CONTROL_STATEMENT: OP_OP KW_IF EXP . EXP OP_CP
   33                  | OP_OP KW_IF EXP . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 77
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 55

   34 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP . EXP OP_CP EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 78
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 56

   35 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP . IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP

    IDENTIFIER  shift, and go to state 79


state 57

   40 LIST: OP_OP KW_LIST OP_OP . VALUES OP_CP OP_CP

    VALUEF  shift, and go to state 80

    VALUES  go to state 81


state 58

   39 LIST: OP_OP KW_LIST OP_CP .

    $default  reduce using rule 39 (LIST)


state 59

   37 EXIT: OP_OP KW_EXIT OP_CP .

    $default  reduce using rule 37 (EXIT)


state 60

   39 LIST: OP_OP . KW_LIST OP_CP
   40     | OP_OP . KW_LIST OP_OP VALUES OP_CP OP_CP
   41     | OP_OP . KW_APPEND LIST EXP OP_CP
   42     | OP_OP . KW_CONCAT LIST LIST OP_CP

    KW_LIST    shift, and go to state 32
    KW_APPEND  shift, and go to state 34
    KW_CONCAT  shift, and go to state 35


state 61

   41 LIST: OP_OP KW_APPEND LIST . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 82
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 62

   42 LIST: OP_OP KW_CONCAT LIST . LIST OP_CP

    OP_OP   shift, and go to state 60
    KW_NIL  shift, and go to state 6

    LIST  go to state 83


state 63

   36 DISPLAY: OP_OP KW_DISP EXP . OP_CP

    OP_CP  shift, and go to state 84


state 64

   45 LOAD: OP_OP KW_LOAD IDENTIFIER . OP_CP

    OP_CP  shift, and go to state 85


state 65

   22 LOGICAL_EXP: OP_OP KW_AND EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 86
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 66

   23 LOGICAL_EXP: OP_OP KW_OR EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 87
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 67

   24 LOGICAL_EXP: OP_OP KW_NOT EXP . OP_CP

    OP_CP  shift, and go to state 88


state 68

   25 LOGICAL_EXP: OP_OP KW_EQUAL EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 89
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 69

   26 LOGICAL_EXP: OP_OP KW_LESS EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 90
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 70

   30 FCALL: OP_OP IDENTIFIER EXP OP_CP .

    $default  reduce using rule 30 (FCALL)


state 71

   18 ARITHMETIC_EXP: OP_OP OP_PLUS EXP EXP . OP_CP

    OP_CP  shift, and go to state 91


state 72

   19 ARITHMETIC_EXP: OP_OP OP_MINUS EXP EXP . OP_CP

    OP_CP  shift, and go to state 92


state 73

   20 ARITHMETIC_EXP: OP_OP OP_MULT EXP EXP . OP_CP

    OP_CP  shift, and go to state 93


state 74

   21 ARITHMETIC_EXP: OP_OP OP_DIV EXP EXP . OP_CP

    OP_CP  shift, and go to state 94


state 75

    4 EXPLIST: EXPLIST . EXP
   29 ASSIGNMENT: OP_OP KW_SET IDENTIFIER EXPLIST . OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    OP_CP       shift, and go to state 95
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 45
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 76

   31 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP . IDENTIFIER OP_CP EXP OP_CP

    IDENTIFIER  shift, and go to state 96


state 77

   32 CONTROL_STATEMENT: OP_OP KW_IF EXP EXP . OP_CP
   33                  | OP_OP KW_IF EXP EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    OP_CP       shift, and go to state 97
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 98
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 78

   34 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP EXP . OP_CP EXPLIST OP_CP

    OP_CP  shift, and go to state 99


state 79

   35 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER . EXP EXP OP_CP EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 100
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 80

   44 VALUES: VALUEF .

    $default  reduce using rule 44 (VALUES)


state 81

   40 LIST: OP_OP KW_LIST OP_OP VALUES . OP_CP OP_CP
   43 VALUES: VALUES . OP_COMMA VALUEF

    OP_CP     shift, and go to state 101
    OP_COMMA  shift, and go to state 102


state 82

   41 LIST: OP_OP KW_APPEND LIST EXP . OP_CP

    OP_CP  shift, and go to state 103


state 83

   42 LIST: OP_OP KW_CONCAT LIST LIST . OP_CP

    OP_CP  shift, and go to state 104


state 84

   36 DISPLAY: OP_OP KW_DISP EXP OP_CP .

    $default  reduce using rule 36 (DISPLAY)


state 85

   45 LOAD: OP_OP KW_LOAD IDENTIFIER OP_CP .

    $default  reduce using rule 45 (LOAD)


state 86

   22 LOGICAL_EXP: OP_OP KW_AND EXP EXP . OP_CP

    OP_CP  shift, and go to state 105


state 87

   23 LOGICAL_EXP: OP_OP KW_OR EXP EXP . OP_CP

    OP_CP  shift, and go to state 106


state 88

   24 LOGICAL_EXP: OP_OP KW_NOT EXP OP_CP .

    $default  reduce using rule 24 (LOGICAL_EXP)


state 89

   25 LOGICAL_EXP: OP_OP KW_EQUAL EXP EXP . OP_CP

    OP_CP  shift, and go to state 107


state 90

   26 LOGICAL_EXP: OP_OP KW_LESS EXP EXP . OP_CP

    OP_CP  shift, and go to state 108


state 91

   18 ARITHMETIC_EXP: OP_OP OP_PLUS EXP EXP OP_CP .

    $default  reduce using rule 18 (ARITHMETIC_EXP)


state 92

   19 ARITHMETIC_EXP: OP_OP OP_MINUS EXP EXP OP_CP .

    $default  reduce using rule 19 (ARITHMETIC_EXP)


state 93

   20 ARITHMETIC_EXP: OP_OP OP_MULT EXP EXP OP_CP .

    $default  reduce using rule 20 (ARITHMETIC_EXP)


state 94

   21 ARITHMETIC_EXP: OP_OP OP_DIV EXP EXP OP_CP .

    $default  reduce using rule 21 (ARITHMETIC_EXP)


state 95

   29 ASSIGNMENT: OP_OP KW_SET IDENTIFIER EXPLIST OP_CP .

    $default  reduce using rule 29 (ASSIGNMENT)


state 96

   31 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER . OP_CP EXP OP_CP

    OP_CP  shift, and go to state 109


state 97

   32 CONTROL_STATEMENT: OP_OP KW_IF EXP EXP OP_CP .

    $default  reduce using rule 32 (CONTROL_STATEMENT)


state 98

   33 CONTROL_STATEMENT: OP_OP KW_IF EXP EXP EXP . OP_CP

    OP_CP  shift, and go to state 110


state 99

   34 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP EXP OP_CP . EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXPLIST            go to state 111
    EXP                go to state 10
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 100

   35 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP . EXP OP_CP EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 112
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 101

   40 LIST: OP_OP KW_LIST OP_OP VALUES OP_CP . OP_CP

    OP_CP  shift, and go to state 113


state 102

   43 VALUES: VALUES OP_COMMA . VALUEF

    VALUEF  shift, and go to state 114


state 103

   41 LIST: OP_OP KW_APPEND LIST EXP OP_CP .

    $default  reduce using rule 41 (LIST)


state 104

   42 LIST: OP_OP KW_CONCAT LIST LIST OP_CP .

    $default  reduce using rule 42 (LIST)


state 105

   22 LOGICAL_EXP: OP_OP KW_AND EXP EXP OP_CP .

    $default  reduce using rule 22 (LOGICAL_EXP)


state 106

   23 LOGICAL_EXP: OP_OP KW_OR EXP EXP OP_CP .

    $default  reduce using rule 23 (LOGICAL_EXP)


state 107

   25 LOGICAL_EXP: OP_OP KW_EQUAL EXP EXP OP_CP .

    $default  reduce using rule 25 (LOGICAL_EXP)


state 108

   26 LOGICAL_EXP: OP_OP KW_LESS EXP EXP OP_CP .

    $default  reduce using rule 26 (LOGICAL_EXP)


state 109

   31 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 115
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 110

   33 CONTROL_STATEMENT: OP_OP KW_IF EXP EXP EXP OP_CP .

    $default  reduce using rule 33 (CONTROL_STATEMENT)


state 111

    4 EXPLIST: EXPLIST . EXP
   34 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP EXP OP_CP EXPLIST . OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    OP_CP       shift, and go to state 116
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 45
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 112

   35 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP . OP_CP EXPLIST OP_CP

    OP_CP  shift, and go to state 117


state 113

   40 LIST: OP_OP KW_LIST OP_OP VALUES OP_CP OP_CP .

    $default  reduce using rule 40 (LIST)


state 114

   43 VALUES: VALUES OP_COMMA VALUEF .

    $default  reduce using rule 43 (VALUES)


state 115

   31 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP . OP_CP

    OP_CP  shift, and go to state 118


state 116

   34 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP EXP OP_CP EXPLIST OP_CP .

    $default  reduce using rule 34 (CONTROL_STATEMENT)


state 117

   35 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP . EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXPLIST            go to state 119
    EXP                go to state 10
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 118

   31 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP .

    $default  reduce using rule 31 (FUNCTION_DEF)


state 119

    4 EXPLIST: EXPLIST . EXP
   35 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST . OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 44
    OP_CP       shift, and go to state 120
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5
    KW_NIL      shift, and go to state 6

    EXP                go to state 45
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    ASSIGNMENT         go to state 14
    FCALL              go to state 15
    FUNCTION_DEF       go to state 16
    CONTROL_STATEMENT  go to state 17
    DISPLAY            go to state 18
    EXIT               go to state 19
    LIST               go to state 20


state 120

   35 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP .

    $default  reduce using rule 35 (CONTROL_STATEMENT)
