State 76 conflicts: 6 shift/reduce
State 78 conflicts: 1 shift/reduce
State 99 conflicts: 1 shift/reduce


Grammar

    0 $accept: START $end

    1 START: INPUT

    2 INPUT: INPUT STATEMENT
    3      | INPUT EXP
    4      | STATEMENT
    5      | EXP

    6 LIST: OP_OP KW_LIST VALUES OP_CP
    7     | OP_OP KW_LIST OP_CP
    8     | KW_NIL
    9     | OP_OP KW_APPEND LIST LIST OP_CP
   10     | OP_OP KW_CONCAT LIST LIST OP_CP

   11 VALUES: VALUES OP_COMMA VALUEF
   12       | VALUEF

   13 EXPLIST: OP_OP EXPLIST EXP OP_CP
   14        | EXP
   15        | /* empty */

   16 EXP: ARITHMETIC_EXP
   17    | IDENTIFIER
   18    | VALUEF
   19    | FCALL
   20    | LOGICAL_EXP
   21    | BOOLEAN
   22    | LIST
   23    | VARIABLE_SET
   24    | FUNCTION_DEF

   25 ARITHMETIC_EXP: OP_OP OP_PLUS EXP EXP OP_CP
   26               | OP_OP OP_MINUS EXP EXP OP_CP
   27               | OP_OP OP_MULT EXP EXP OP_CP
   28               | OP_OP OP_DIV EXP EXP OP_CP

   29 LOGICAL_EXP: OP_OP KW_AND EXP EXP OP_CP
   30            | OP_OP KW_OR EXP EXP OP_CP
   31            | OP_OP KW_NOT EXP OP_CP
   32            | OP_OP KW_EQUAL EXP EXP OP_CP
   33            | OP_OP KW_LESS EXP EXP OP_CP

   34 BOOLEAN: KW_TRUE
   35        | KW_FALSE

   36 STATEMENT: ASSIGNMENT
   37          | CONTROL_STATEMENT
   38          | DISPLAY
   39          | QUIT

   40 ASSIGNMENT: OP_OP KW_SET IDENTIFIER EXP OP_CP

   41 FCALL: OP_OP IDENTIFIER VALUEF OP_CP

   42 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP

   43 CONTROL_STATEMENT: OP_OP KW_IF LOGICAL_EXP EXPLIST OP_CP
   44                  | OP_OP KW_WHILE OP_OP LOGICAL_EXP OP_CP EXPLIST OP_CP
   45                  | OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP

   46 VARIABLE_SET: OP_OP KW_SET IDENTIFIER EXPLIST OP_CP

   47 DISPLAY: OP_OP KW_DISP EXP OP_CP

   48 QUIT: OP_OP KW_EXIT OP_CP


Terminals, with rules where they appear

$end (0) 0
error (256)
VALUEF (258) 11 12 18 41
IDENTIFIER (259) 17 40 41 42 45 46
OP_PLUS (260) 25
OP_MINUS (261) 26
OP_MULT (262) 27
OP_DIV (263) 28
OP_OP (264) 6 7 9 10 13 25 26 27 28 29 30 31 32 33 40 41 42 43 44 45
    46 47 48
OP_CP (265) 6 7 9 10 13 25 26 27 28 29 30 31 32 33 40 41 42 43 44 45
    46 47 48
OP_COMMA (266) 11
KW_SET (267) 40 46
KW_DEFFUN (268) 42
KW_IF (269) 43
KW_WHILE (270) 44
KW_FOR (271) 45
KW_NIL (272) 8
KW_APPEND (273) 9
KW_CONCAT (274) 10
KW_TRUE (275) 34
KW_FALSE (276) 35
KW_AND (277) 29
KW_OR (278) 30
KW_NOT (279) 31
KW_EQUAL (280) 32
KW_LESS (281) 33
KW_LIST (282) 6 7
KW_EXIT (283) 48
KW_DISP (284) 47


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
START (31)
    on left: 1, on right: 0
INPUT (32)
    on left: 2 3 4 5, on right: 1 2 3
LIST (33)
    on left: 6 7 8 9 10, on right: 9 10 22
VALUES (34)
    on left: 11 12, on right: 6 11
EXPLIST (35)
    on left: 13 14 15, on right: 13 43 44 45 46
EXP (36)
    on left: 16 17 18 19 20 21 22 23 24, on right: 3 5 13 14 25 26
    27 28 29 30 31 32 33 40 42 45 47
ARITHMETIC_EXP (37)
    on left: 25 26 27 28, on right: 16
LOGICAL_EXP (38)
    on left: 29 30 31 32 33, on right: 20 43 44
BOOLEAN (39)
    on left: 34 35, on right: 21
STATEMENT (40)
    on left: 36 37 38 39, on right: 2 4
ASSIGNMENT (41)
    on left: 40, on right: 36
FCALL (42)
    on left: 41, on right: 19
FUNCTION_DEF (43)
    on left: 42, on right: 24
CONTROL_STATEMENT (44)
    on left: 43 44 45, on right: 37
VARIABLE_SET (45)
    on left: 46, on right: 23
DISPLAY (46)
    on left: 47, on right: 38
QUIT (47)
    on left: 48, on right: 39


state 0

    0 $accept: . START $end

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    START              go to state 7
    INPUT              go to state 8
    LIST               go to state 9
    EXP                go to state 10
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    STATEMENT          go to state 14
    ASSIGNMENT         go to state 15
    FCALL              go to state 16
    FUNCTION_DEF       go to state 17
    CONTROL_STATEMENT  go to state 18
    VARIABLE_SET       go to state 19
    DISPLAY            go to state 20
    QUIT               go to state 21


state 1

   18 EXP: VALUEF .

    $default  reduce using rule 18 (EXP)


state 2

   17 EXP: IDENTIFIER .

    $default  reduce using rule 17 (EXP)


state 3

    6 LIST: OP_OP . KW_LIST VALUES OP_CP
    7     | OP_OP . KW_LIST OP_CP
    9     | OP_OP . KW_APPEND LIST LIST OP_CP
   10     | OP_OP . KW_CONCAT LIST LIST OP_CP
   25 ARITHMETIC_EXP: OP_OP . OP_PLUS EXP EXP OP_CP
   26               | OP_OP . OP_MINUS EXP EXP OP_CP
   27               | OP_OP . OP_MULT EXP EXP OP_CP
   28               | OP_OP . OP_DIV EXP EXP OP_CP
   29 LOGICAL_EXP: OP_OP . KW_AND EXP EXP OP_CP
   30            | OP_OP . KW_OR EXP EXP OP_CP
   31            | OP_OP . KW_NOT EXP OP_CP
   32            | OP_OP . KW_EQUAL EXP EXP OP_CP
   33            | OP_OP . KW_LESS EXP EXP OP_CP
   40 ASSIGNMENT: OP_OP . KW_SET IDENTIFIER EXP OP_CP
   41 FCALL: OP_OP . IDENTIFIER VALUEF OP_CP
   42 FUNCTION_DEF: OP_OP . KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP
   43 CONTROL_STATEMENT: OP_OP . KW_IF LOGICAL_EXP EXPLIST OP_CP
   44                  | OP_OP . KW_WHILE OP_OP LOGICAL_EXP OP_CP EXPLIST OP_CP
   45                  | OP_OP . KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP
   46 VARIABLE_SET: OP_OP . KW_SET IDENTIFIER EXPLIST OP_CP
   47 DISPLAY: OP_OP . KW_DISP EXP OP_CP
   48 QUIT: OP_OP . KW_EXIT OP_CP

    IDENTIFIER  shift, and go to state 22
    OP_PLUS     shift, and go to state 23
    OP_MINUS    shift, and go to state 24
    OP_MULT     shift, and go to state 25
    OP_DIV      shift, and go to state 26
    KW_SET      shift, and go to state 27
    KW_DEFFUN   shift, and go to state 28
    KW_IF       shift, and go to state 29
    KW_WHILE    shift, and go to state 30
    KW_FOR      shift, and go to state 31
    KW_APPEND   shift, and go to state 32
    KW_CONCAT   shift, and go to state 33
    KW_AND      shift, and go to state 34
    KW_OR       shift, and go to state 35
    KW_NOT      shift, and go to state 36
    KW_EQUAL    shift, and go to state 37
    KW_LESS     shift, and go to state 38
    KW_LIST     shift, and go to state 39
    KW_EXIT     shift, and go to state 40
    KW_DISP     shift, and go to state 41


state 4

    8 LIST: KW_NIL .

    $default  reduce using rule 8 (LIST)


state 5

   34 BOOLEAN: KW_TRUE .

    $default  reduce using rule 34 (BOOLEAN)


state 6

   35 BOOLEAN: KW_FALSE .

    $default  reduce using rule 35 (BOOLEAN)


state 7

    0 $accept: START . $end

    $end  shift, and go to state 42


state 8

    1 START: INPUT .
    2 INPUT: INPUT . STATEMENT
    3      | INPUT . EXP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    $default  reduce using rule 1 (START)

    LIST               go to state 9
    EXP                go to state 43
    ARITHMETIC_EXP     go to state 11
    LOGICAL_EXP        go to state 12
    BOOLEAN            go to state 13
    STATEMENT          go to state 44
    ASSIGNMENT         go to state 15
    FCALL              go to state 16
    FUNCTION_DEF       go to state 17
    CONTROL_STATEMENT  go to state 18
    VARIABLE_SET       go to state 19
    DISPLAY            go to state 20
    QUIT               go to state 21


state 9

   22 EXP: LIST .

    $default  reduce using rule 22 (EXP)


state 10

    5 INPUT: EXP .

    $default  reduce using rule 5 (INPUT)


state 11

   16 EXP: ARITHMETIC_EXP .

    $default  reduce using rule 16 (EXP)


state 12

   20 EXP: LOGICAL_EXP .

    $default  reduce using rule 20 (EXP)


state 13

   21 EXP: BOOLEAN .

    $default  reduce using rule 21 (EXP)


state 14

    4 INPUT: STATEMENT .

    $default  reduce using rule 4 (INPUT)


state 15

   36 STATEMENT: ASSIGNMENT .

    $default  reduce using rule 36 (STATEMENT)


state 16

   19 EXP: FCALL .

    $default  reduce using rule 19 (EXP)


state 17

   24 EXP: FUNCTION_DEF .

    $default  reduce using rule 24 (EXP)


state 18

   37 STATEMENT: CONTROL_STATEMENT .

    $default  reduce using rule 37 (STATEMENT)


state 19

   23 EXP: VARIABLE_SET .

    $default  reduce using rule 23 (EXP)


state 20

   38 STATEMENT: DISPLAY .

    $default  reduce using rule 38 (STATEMENT)


state 21

   39 STATEMENT: QUIT .

    $default  reduce using rule 39 (STATEMENT)


state 22

   41 FCALL: OP_OP IDENTIFIER . VALUEF OP_CP

    VALUEF  shift, and go to state 45


state 23

   25 ARITHMETIC_EXP: OP_OP OP_PLUS . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 47
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 24

   26 ARITHMETIC_EXP: OP_OP OP_MINUS . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 48
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 25

   27 ARITHMETIC_EXP: OP_OP OP_MULT . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 49
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 26

   28 ARITHMETIC_EXP: OP_OP OP_DIV . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 50
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 27

   40 ASSIGNMENT: OP_OP KW_SET . IDENTIFIER EXP OP_CP
   46 VARIABLE_SET: OP_OP KW_SET . IDENTIFIER EXPLIST OP_CP

    IDENTIFIER  shift, and go to state 51


state 28

   42 FUNCTION_DEF: OP_OP KW_DEFFUN . IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP

    IDENTIFIER  shift, and go to state 52


state 29

   43 CONTROL_STATEMENT: OP_OP KW_IF . LOGICAL_EXP EXPLIST OP_CP

    OP_OP  shift, and go to state 53

    LOGICAL_EXP  go to state 54


state 30

   44 CONTROL_STATEMENT: OP_OP KW_WHILE . OP_OP LOGICAL_EXP OP_CP EXPLIST OP_CP

    OP_OP  shift, and go to state 55


state 31

   45 CONTROL_STATEMENT: OP_OP KW_FOR . OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP

    OP_OP  shift, and go to state 56


state 32

    9 LIST: OP_OP KW_APPEND . LIST LIST OP_CP

    OP_OP   shift, and go to state 57
    KW_NIL  shift, and go to state 4

    LIST  go to state 58


state 33

   10 LIST: OP_OP KW_CONCAT . LIST LIST OP_CP

    OP_OP   shift, and go to state 57
    KW_NIL  shift, and go to state 4

    LIST  go to state 59


state 34

   29 LOGICAL_EXP: OP_OP KW_AND . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 60
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 35

   30 LOGICAL_EXP: OP_OP KW_OR . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 61
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 36

   31 LOGICAL_EXP: OP_OP KW_NOT . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 62
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 37

   32 LOGICAL_EXP: OP_OP KW_EQUAL . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 63
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 38

   33 LOGICAL_EXP: OP_OP KW_LESS . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 64
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 39

    6 LIST: OP_OP KW_LIST . VALUES OP_CP
    7     | OP_OP KW_LIST . OP_CP

    VALUEF  shift, and go to state 65
    OP_CP   shift, and go to state 66

    VALUES  go to state 67


state 40

   48 QUIT: OP_OP KW_EXIT . OP_CP

    OP_CP  shift, and go to state 68


state 41

   47 DISPLAY: OP_OP KW_DISP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 69
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 42

    0 $accept: START $end .

    $default  accept


state 43

    3 INPUT: INPUT EXP .

    $default  reduce using rule 3 (INPUT)


state 44

    2 INPUT: INPUT STATEMENT .

    $default  reduce using rule 2 (INPUT)


state 45

   41 FCALL: OP_OP IDENTIFIER VALUEF . OP_CP

    OP_CP  shift, and go to state 70


state 46

    6 LIST: OP_OP . KW_LIST VALUES OP_CP
    7     | OP_OP . KW_LIST OP_CP
    9     | OP_OP . KW_APPEND LIST LIST OP_CP
   10     | OP_OP . KW_CONCAT LIST LIST OP_CP
   25 ARITHMETIC_EXP: OP_OP . OP_PLUS EXP EXP OP_CP
   26               | OP_OP . OP_MINUS EXP EXP OP_CP
   27               | OP_OP . OP_MULT EXP EXP OP_CP
   28               | OP_OP . OP_DIV EXP EXP OP_CP
   29 LOGICAL_EXP: OP_OP . KW_AND EXP EXP OP_CP
   30            | OP_OP . KW_OR EXP EXP OP_CP
   31            | OP_OP . KW_NOT EXP OP_CP
   32            | OP_OP . KW_EQUAL EXP EXP OP_CP
   33            | OP_OP . KW_LESS EXP EXP OP_CP
   41 FCALL: OP_OP . IDENTIFIER VALUEF OP_CP
   42 FUNCTION_DEF: OP_OP . KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP
   46 VARIABLE_SET: OP_OP . KW_SET IDENTIFIER EXPLIST OP_CP

    IDENTIFIER  shift, and go to state 22
    OP_PLUS     shift, and go to state 23
    OP_MINUS    shift, and go to state 24
    OP_MULT     shift, and go to state 25
    OP_DIV      shift, and go to state 26
    KW_SET      shift, and go to state 71
    KW_DEFFUN   shift, and go to state 28
    KW_APPEND   shift, and go to state 32
    KW_CONCAT   shift, and go to state 33
    KW_AND      shift, and go to state 34
    KW_OR       shift, and go to state 35
    KW_NOT      shift, and go to state 36
    KW_EQUAL    shift, and go to state 37
    KW_LESS     shift, and go to state 38
    KW_LIST     shift, and go to state 39


state 47

   25 ARITHMETIC_EXP: OP_OP OP_PLUS EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 72
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 48

   26 ARITHMETIC_EXP: OP_OP OP_MINUS EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 73
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 49

   27 ARITHMETIC_EXP: OP_OP OP_MULT EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 74
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 50

   28 ARITHMETIC_EXP: OP_OP OP_DIV EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 75
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 51

   40 ASSIGNMENT: OP_OP KW_SET IDENTIFIER . EXP OP_CP
   46 VARIABLE_SET: OP_OP KW_SET IDENTIFIER . EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 76
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    $default  reduce using rule 15 (EXPLIST)

    LIST            go to state 9
    EXPLIST         go to state 77
    EXP             go to state 78
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 52

   42 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER . OP_OP IDENTIFIER OP_CP EXP OP_CP

    OP_OP  shift, and go to state 79


state 53

   29 LOGICAL_EXP: OP_OP . KW_AND EXP EXP OP_CP
   30            | OP_OP . KW_OR EXP EXP OP_CP
   31            | OP_OP . KW_NOT EXP OP_CP
   32            | OP_OP . KW_EQUAL EXP EXP OP_CP
   33            | OP_OP . KW_LESS EXP EXP OP_CP

    KW_AND    shift, and go to state 34
    KW_OR     shift, and go to state 35
    KW_NOT    shift, and go to state 36
    KW_EQUAL  shift, and go to state 37
    KW_LESS   shift, and go to state 38


state 54

   43 CONTROL_STATEMENT: OP_OP KW_IF LOGICAL_EXP . EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 76
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    $default  reduce using rule 15 (EXPLIST)

    LIST            go to state 9
    EXPLIST         go to state 80
    EXP             go to state 81
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 55

   44 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP . LOGICAL_EXP OP_CP EXPLIST OP_CP

    OP_OP  shift, and go to state 53

    LOGICAL_EXP  go to state 82


state 56

   45 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP . IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP

    IDENTIFIER  shift, and go to state 83


state 57

    6 LIST: OP_OP . KW_LIST VALUES OP_CP
    7     | OP_OP . KW_LIST OP_CP
    9     | OP_OP . KW_APPEND LIST LIST OP_CP
   10     | OP_OP . KW_CONCAT LIST LIST OP_CP

    KW_APPEND  shift, and go to state 32
    KW_CONCAT  shift, and go to state 33
    KW_LIST    shift, and go to state 39


state 58

    9 LIST: OP_OP KW_APPEND LIST . LIST OP_CP

    OP_OP   shift, and go to state 57
    KW_NIL  shift, and go to state 4

    LIST  go to state 84


state 59

   10 LIST: OP_OP KW_CONCAT LIST . LIST OP_CP

    OP_OP   shift, and go to state 57
    KW_NIL  shift, and go to state 4

    LIST  go to state 85


state 60

   29 LOGICAL_EXP: OP_OP KW_AND EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 86
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 61

   30 LOGICAL_EXP: OP_OP KW_OR EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 87
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 62

   31 LOGICAL_EXP: OP_OP KW_NOT EXP . OP_CP

    OP_CP  shift, and go to state 88


state 63

   32 LOGICAL_EXP: OP_OP KW_EQUAL EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 89
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 64

   33 LOGICAL_EXP: OP_OP KW_LESS EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 90
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 65

   12 VALUES: VALUEF .

    $default  reduce using rule 12 (VALUES)


state 66

    7 LIST: OP_OP KW_LIST OP_CP .

    $default  reduce using rule 7 (LIST)


state 67

    6 LIST: OP_OP KW_LIST VALUES . OP_CP
   11 VALUES: VALUES . OP_COMMA VALUEF

    OP_CP     shift, and go to state 91
    OP_COMMA  shift, and go to state 92


state 68

   48 QUIT: OP_OP KW_EXIT OP_CP .

    $default  reduce using rule 48 (QUIT)


state 69

   47 DISPLAY: OP_OP KW_DISP EXP . OP_CP

    OP_CP  shift, and go to state 93


state 70

   41 FCALL: OP_OP IDENTIFIER VALUEF OP_CP .

    $default  reduce using rule 41 (FCALL)


state 71

   46 VARIABLE_SET: OP_OP KW_SET . IDENTIFIER EXPLIST OP_CP

    IDENTIFIER  shift, and go to state 94


state 72

   25 ARITHMETIC_EXP: OP_OP OP_PLUS EXP EXP . OP_CP

    OP_CP  shift, and go to state 95


state 73

   26 ARITHMETIC_EXP: OP_OP OP_MINUS EXP EXP . OP_CP

    OP_CP  shift, and go to state 96


state 74

   27 ARITHMETIC_EXP: OP_OP OP_MULT EXP EXP . OP_CP

    OP_CP  shift, and go to state 97


state 75

   28 ARITHMETIC_EXP: OP_OP OP_DIV EXP EXP . OP_CP

    OP_CP  shift, and go to state 98


state 76

    6 LIST: OP_OP . KW_LIST VALUES OP_CP
    7     | OP_OP . KW_LIST OP_CP
    9     | OP_OP . KW_APPEND LIST LIST OP_CP
   10     | OP_OP . KW_CONCAT LIST LIST OP_CP
   13 EXPLIST: OP_OP . EXPLIST EXP OP_CP
   25 ARITHMETIC_EXP: OP_OP . OP_PLUS EXP EXP OP_CP
   26               | OP_OP . OP_MINUS EXP EXP OP_CP
   27               | OP_OP . OP_MULT EXP EXP OP_CP
   28               | OP_OP . OP_DIV EXP EXP OP_CP
   29 LOGICAL_EXP: OP_OP . KW_AND EXP EXP OP_CP
   30            | OP_OP . KW_OR EXP EXP OP_CP
   31            | OP_OP . KW_NOT EXP OP_CP
   32            | OP_OP . KW_EQUAL EXP EXP OP_CP
   33            | OP_OP . KW_LESS EXP EXP OP_CP
   41 FCALL: OP_OP . IDENTIFIER VALUEF OP_CP
   42 FUNCTION_DEF: OP_OP . KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP
   46 VARIABLE_SET: OP_OP . KW_SET IDENTIFIER EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 99
    OP_PLUS     shift, and go to state 23
    OP_MINUS    shift, and go to state 24
    OP_MULT     shift, and go to state 25
    OP_DIV      shift, and go to state 26
    OP_OP       shift, and go to state 76
    KW_SET      shift, and go to state 71
    KW_DEFFUN   shift, and go to state 28
    KW_NIL      shift, and go to state 4
    KW_APPEND   shift, and go to state 32
    KW_CONCAT   shift, and go to state 33
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6
    KW_AND      shift, and go to state 34
    KW_OR       shift, and go to state 35
    KW_NOT      shift, and go to state 36
    KW_EQUAL    shift, and go to state 37
    KW_LESS     shift, and go to state 38
    KW_LIST     shift, and go to state 39

    VALUEF      [reduce using rule 15 (EXPLIST)]
    IDENTIFIER  [reduce using rule 15 (EXPLIST)]
    OP_OP       [reduce using rule 15 (EXPLIST)]
    KW_NIL      [reduce using rule 15 (EXPLIST)]
    KW_TRUE     [reduce using rule 15 (EXPLIST)]
    KW_FALSE    [reduce using rule 15 (EXPLIST)]

    LIST            go to state 9
    EXPLIST         go to state 100
    EXP             go to state 81
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 77

   46 VARIABLE_SET: OP_OP KW_SET IDENTIFIER EXPLIST . OP_CP

    OP_CP  shift, and go to state 101


state 78

   14 EXPLIST: EXP .
   40 ASSIGNMENT: OP_OP KW_SET IDENTIFIER EXP . OP_CP

    OP_CP  shift, and go to state 102

    OP_CP  [reduce using rule 14 (EXPLIST)]


state 79

   42 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP . IDENTIFIER OP_CP EXP OP_CP

    IDENTIFIER  shift, and go to state 103


state 80

   43 CONTROL_STATEMENT: OP_OP KW_IF LOGICAL_EXP EXPLIST . OP_CP

    OP_CP  shift, and go to state 104


state 81

   14 EXPLIST: EXP .

    $default  reduce using rule 14 (EXPLIST)


state 82

   44 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP LOGICAL_EXP . OP_CP EXPLIST OP_CP

    OP_CP  shift, and go to state 105


state 83

   45 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER . EXP EXP OP_CP EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 106
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 84

    9 LIST: OP_OP KW_APPEND LIST LIST . OP_CP

    OP_CP  shift, and go to state 107


state 85

   10 LIST: OP_OP KW_CONCAT LIST LIST . OP_CP

    OP_CP  shift, and go to state 108


state 86

   29 LOGICAL_EXP: OP_OP KW_AND EXP EXP . OP_CP

    OP_CP  shift, and go to state 109


state 87

   30 LOGICAL_EXP: OP_OP KW_OR EXP EXP . OP_CP

    OP_CP  shift, and go to state 110


state 88

   31 LOGICAL_EXP: OP_OP KW_NOT EXP OP_CP .

    $default  reduce using rule 31 (LOGICAL_EXP)


state 89

   32 LOGICAL_EXP: OP_OP KW_EQUAL EXP EXP . OP_CP

    OP_CP  shift, and go to state 111


state 90

   33 LOGICAL_EXP: OP_OP KW_LESS EXP EXP . OP_CP

    OP_CP  shift, and go to state 112


state 91

    6 LIST: OP_OP KW_LIST VALUES OP_CP .

    $default  reduce using rule 6 (LIST)


state 92

   11 VALUES: VALUES OP_COMMA . VALUEF

    VALUEF  shift, and go to state 113


state 93

   47 DISPLAY: OP_OP KW_DISP EXP OP_CP .

    $default  reduce using rule 47 (DISPLAY)


state 94

   46 VARIABLE_SET: OP_OP KW_SET IDENTIFIER . EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 76
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    $default  reduce using rule 15 (EXPLIST)

    LIST            go to state 9
    EXPLIST         go to state 77
    EXP             go to state 81
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 95

   25 ARITHMETIC_EXP: OP_OP OP_PLUS EXP EXP OP_CP .

    $default  reduce using rule 25 (ARITHMETIC_EXP)


state 96

   26 ARITHMETIC_EXP: OP_OP OP_MINUS EXP EXP OP_CP .

    $default  reduce using rule 26 (ARITHMETIC_EXP)


state 97

   27 ARITHMETIC_EXP: OP_OP OP_MULT EXP EXP OP_CP .

    $default  reduce using rule 27 (ARITHMETIC_EXP)


state 98

   28 ARITHMETIC_EXP: OP_OP OP_DIV EXP EXP OP_CP .

    $default  reduce using rule 28 (ARITHMETIC_EXP)


state 99

   17 EXP: IDENTIFIER .
   41 FCALL: OP_OP IDENTIFIER . VALUEF OP_CP

    VALUEF  shift, and go to state 45

    VALUEF    [reduce using rule 17 (EXP)]
    $default  reduce using rule 17 (EXP)


state 100

   13 EXPLIST: OP_OP EXPLIST . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 114
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 101

   46 VARIABLE_SET: OP_OP KW_SET IDENTIFIER EXPLIST OP_CP .

    $default  reduce using rule 46 (VARIABLE_SET)


state 102

   40 ASSIGNMENT: OP_OP KW_SET IDENTIFIER EXP OP_CP .

    $default  reduce using rule 40 (ASSIGNMENT)


state 103

   42 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER . OP_CP EXP OP_CP

    OP_CP  shift, and go to state 115


state 104

   43 CONTROL_STATEMENT: OP_OP KW_IF LOGICAL_EXP EXPLIST OP_CP .

    $default  reduce using rule 43 (CONTROL_STATEMENT)


state 105

   44 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP LOGICAL_EXP OP_CP . EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 76
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    $default  reduce using rule 15 (EXPLIST)

    LIST            go to state 9
    EXPLIST         go to state 116
    EXP             go to state 81
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 106

   45 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP . EXP OP_CP EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 117
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 107

    9 LIST: OP_OP KW_APPEND LIST LIST OP_CP .

    $default  reduce using rule 9 (LIST)


state 108

   10 LIST: OP_OP KW_CONCAT LIST LIST OP_CP .

    $default  reduce using rule 10 (LIST)


state 109

   29 LOGICAL_EXP: OP_OP KW_AND EXP EXP OP_CP .

    $default  reduce using rule 29 (LOGICAL_EXP)


state 110

   30 LOGICAL_EXP: OP_OP KW_OR EXP EXP OP_CP .

    $default  reduce using rule 30 (LOGICAL_EXP)


state 111

   32 LOGICAL_EXP: OP_OP KW_EQUAL EXP EXP OP_CP .

    $default  reduce using rule 32 (LOGICAL_EXP)


state 112

   33 LOGICAL_EXP: OP_OP KW_LESS EXP EXP OP_CP .

    $default  reduce using rule 33 (LOGICAL_EXP)


state 113

   11 VALUES: VALUES OP_COMMA VALUEF .

    $default  reduce using rule 11 (VALUES)


state 114

   13 EXPLIST: OP_OP EXPLIST EXP . OP_CP

    OP_CP  shift, and go to state 118


state 115

   42 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 46
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    LIST            go to state 9
    EXP             go to state 119
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 116

   44 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP LOGICAL_EXP OP_CP EXPLIST . OP_CP

    OP_CP  shift, and go to state 120


state 117

   45 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP . OP_CP EXPLIST OP_CP

    OP_CP  shift, and go to state 121


state 118

   13 EXPLIST: OP_OP EXPLIST EXP OP_CP .

    $default  reduce using rule 13 (EXPLIST)


state 119

   42 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP . OP_CP

    OP_CP  shift, and go to state 122


state 120

   44 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP LOGICAL_EXP OP_CP EXPLIST OP_CP .

    $default  reduce using rule 44 (CONTROL_STATEMENT)


state 121

   45 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP . EXPLIST OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 76
    KW_NIL      shift, and go to state 4
    KW_TRUE     shift, and go to state 5
    KW_FALSE    shift, and go to state 6

    $default  reduce using rule 15 (EXPLIST)

    LIST            go to state 9
    EXPLIST         go to state 123
    EXP             go to state 81
    ARITHMETIC_EXP  go to state 11
    LOGICAL_EXP     go to state 12
    BOOLEAN         go to state 13
    FCALL           go to state 16
    FUNCTION_DEF    go to state 17
    VARIABLE_SET    go to state 19


state 122

   42 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP .

    $default  reduce using rule 42 (FUNCTION_DEF)


state 123

   45 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST . OP_CP

    OP_CP  shift, and go to state 124


state 124

   45 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXPLIST OP_CP .

    $default  reduce using rule 45 (CONTROL_STATEMENT)
