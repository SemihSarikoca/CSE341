Grammar

    0 $accept: START $end

    1 START: INPUT

    2 INPUT: EXPLIST

    3 EXPLIST: EXPLIST EXP
    4        | EXP

    5 EXP: ARITHMETIC_EXP
    6    | IDENTIFIER
    7    | VALUEF
    8    | FCALL
    9    | LOGICAL_EXP
   10    | BOOLEAN
   11    | FUNCTION_DEF
   12    | DISPLAY
   13    | CONTROL_STATEMENT
   14    | ASSIGNMENT
   15    | QUIT

   16 ARITHMETIC_EXP: OP_OP OP_PLUS EXP EXP OP_CP
   17               | OP_OP OP_MINUS EXP EXP OP_CP
   18               | OP_OP OP_MULT EXP EXP OP_CP
   19               | OP_OP OP_DIV EXP EXP OP_CP

   20 LOGICAL_EXP: OP_OP KW_AND EXP EXP OP_CP
   21            | OP_OP KW_OR EXP EXP OP_CP
   22            | OP_OP KW_NOT EXP OP_CP
   23            | OP_OP KW_EQUAL EXP EXP OP_CP
   24            | OP_OP KW_LESS EXP EXP OP_CP

   25 BOOLEAN: KW_TRUE
   26        | KW_FALSE

   27 ASSIGNMENT: OP_OP KW_SET IDENTIFIER EXP OP_CP

   28 FCALL: OP_OP IDENTIFIER EXP OP_CP

   29 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP

   30 CONTROL_STATEMENT: OP_OP KW_IF EXP EXP OP_CP
   31                  | OP_OP KW_WHILE OP_OP EXP OP_CP EXP OP_CP
   32                  | OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXP OP_CP

   33 DISPLAY: OP_OP KW_DISP EXP OP_CP

   34 QUIT: OP_OP KW_EXIT OP_CP


Terminals, with rules where they appear

$end (0) 0
error (256)
VALUEF (258) 7
IDENTIFIER (259) 6 27 28 29 32
OP_PLUS (260) 16
OP_MINUS (261) 17
OP_MULT (262) 18
OP_DIV (263) 19
OP_OP (264) 16 17 18 19 20 21 22 23 24 27 28 29 30 31 32 33 34
OP_CP (265) 16 17 18 19 20 21 22 23 24 27 28 29 30 31 32 33 34
KW_SET (266) 27
KW_DEFFUN (267) 29
KW_IF (268) 30
KW_WHILE (269) 31
KW_FOR (270) 32
KW_TRUE (271) 25
KW_FALSE (272) 26
KW_AND (273) 20
KW_OR (274) 21
KW_NOT (275) 22
KW_EQUAL (276) 23
KW_LESS (277) 24
KW_EXIT (278) 34
KW_DISP (279) 33


Nonterminals, with rules where they appear

$accept (25)
    on left: 0
START (26)
    on left: 1, on right: 0
INPUT (27)
    on left: 2, on right: 1
EXPLIST (28)
    on left: 3 4, on right: 2 3
EXP (29)
    on left: 5 6 7 8 9 10 11 12 13 14 15, on right: 3 4 16 17 18 19
    20 21 22 23 24 27 28 29 30 31 32 33
ARITHMETIC_EXP (30)
    on left: 16 17 18 19, on right: 5
LOGICAL_EXP (31)
    on left: 20 21 22 23 24, on right: 9
BOOLEAN (32)
    on left: 25 26, on right: 10
ASSIGNMENT (33)
    on left: 27, on right: 14
FCALL (34)
    on left: 28, on right: 8
FUNCTION_DEF (35)
    on left: 29, on right: 11
CONTROL_STATEMENT (36)
    on left: 30 31 32, on right: 13
DISPLAY (37)
    on left: 33, on right: 12
QUIT (38)
    on left: 34, on right: 15


state 0

    0 $accept: . START $end

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    START              go to state 6
    INPUT              go to state 7
    EXPLIST            go to state 8
    EXP                go to state 9
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 1

    7 EXP: VALUEF .

    $default  reduce using rule 7 (EXP)


state 2

    6 EXP: IDENTIFIER .

    $default  reduce using rule 6 (EXP)


state 3

   16 ARITHMETIC_EXP: OP_OP . OP_PLUS EXP EXP OP_CP
   17               | OP_OP . OP_MINUS EXP EXP OP_CP
   18               | OP_OP . OP_MULT EXP EXP OP_CP
   19               | OP_OP . OP_DIV EXP EXP OP_CP
   20 LOGICAL_EXP: OP_OP . KW_AND EXP EXP OP_CP
   21            | OP_OP . KW_OR EXP EXP OP_CP
   22            | OP_OP . KW_NOT EXP OP_CP
   23            | OP_OP . KW_EQUAL EXP EXP OP_CP
   24            | OP_OP . KW_LESS EXP EXP OP_CP
   27 ASSIGNMENT: OP_OP . KW_SET IDENTIFIER EXP OP_CP
   28 FCALL: OP_OP . IDENTIFIER EXP OP_CP
   29 FUNCTION_DEF: OP_OP . KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP
   30 CONTROL_STATEMENT: OP_OP . KW_IF EXP EXP OP_CP
   31                  | OP_OP . KW_WHILE OP_OP EXP OP_CP EXP OP_CP
   32                  | OP_OP . KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXP OP_CP
   33 DISPLAY: OP_OP . KW_DISP EXP OP_CP
   34 QUIT: OP_OP . KW_EXIT OP_CP

    IDENTIFIER  shift, and go to state 19
    OP_PLUS     shift, and go to state 20
    OP_MINUS    shift, and go to state 21
    OP_MULT     shift, and go to state 22
    OP_DIV      shift, and go to state 23
    KW_SET      shift, and go to state 24
    KW_DEFFUN   shift, and go to state 25
    KW_IF       shift, and go to state 26
    KW_WHILE    shift, and go to state 27
    KW_FOR      shift, and go to state 28
    KW_AND      shift, and go to state 29
    KW_OR       shift, and go to state 30
    KW_NOT      shift, and go to state 31
    KW_EQUAL    shift, and go to state 32
    KW_LESS     shift, and go to state 33
    KW_EXIT     shift, and go to state 34
    KW_DISP     shift, and go to state 35


state 4

   25 BOOLEAN: KW_TRUE .

    $default  reduce using rule 25 (BOOLEAN)


state 5

   26 BOOLEAN: KW_FALSE .

    $default  reduce using rule 26 (BOOLEAN)


state 6

    0 $accept: START . $end

    $end  shift, and go to state 36


state 7

    1 START: INPUT .

    $default  reduce using rule 1 (START)


state 8

    2 INPUT: EXPLIST .
    3 EXPLIST: EXPLIST . EXP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    $default  reduce using rule 2 (INPUT)

    EXP                go to state 37
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 9

    4 EXPLIST: EXP .

    $default  reduce using rule 4 (EXPLIST)


state 10

    5 EXP: ARITHMETIC_EXP .

    $default  reduce using rule 5 (EXP)


state 11

    9 EXP: LOGICAL_EXP .

    $default  reduce using rule 9 (EXP)


state 12

   10 EXP: BOOLEAN .

    $default  reduce using rule 10 (EXP)


state 13

   14 EXP: ASSIGNMENT .

    $default  reduce using rule 14 (EXP)


state 14

    8 EXP: FCALL .

    $default  reduce using rule 8 (EXP)


state 15

   11 EXP: FUNCTION_DEF .

    $default  reduce using rule 11 (EXP)


state 16

   13 EXP: CONTROL_STATEMENT .

    $default  reduce using rule 13 (EXP)


state 17

   12 EXP: DISPLAY .

    $default  reduce using rule 12 (EXP)


state 18

   15 EXP: QUIT .

    $default  reduce using rule 15 (EXP)


state 19

   28 FCALL: OP_OP IDENTIFIER . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 38
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 20

   16 ARITHMETIC_EXP: OP_OP OP_PLUS . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 39
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 21

   17 ARITHMETIC_EXP: OP_OP OP_MINUS . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 40
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 22

   18 ARITHMETIC_EXP: OP_OP OP_MULT . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 41
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 23

   19 ARITHMETIC_EXP: OP_OP OP_DIV . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 42
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 24

   27 ASSIGNMENT: OP_OP KW_SET . IDENTIFIER EXP OP_CP

    IDENTIFIER  shift, and go to state 43


state 25

   29 FUNCTION_DEF: OP_OP KW_DEFFUN . IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP

    IDENTIFIER  shift, and go to state 44


state 26

   30 CONTROL_STATEMENT: OP_OP KW_IF . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 45
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 27

   31 CONTROL_STATEMENT: OP_OP KW_WHILE . OP_OP EXP OP_CP EXP OP_CP

    OP_OP  shift, and go to state 46


state 28

   32 CONTROL_STATEMENT: OP_OP KW_FOR . OP_OP IDENTIFIER EXP EXP OP_CP EXP OP_CP

    OP_OP  shift, and go to state 47


state 29

   20 LOGICAL_EXP: OP_OP KW_AND . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 48
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 30

   21 LOGICAL_EXP: OP_OP KW_OR . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 49
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 31

   22 LOGICAL_EXP: OP_OP KW_NOT . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 50
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 32

   23 LOGICAL_EXP: OP_OP KW_EQUAL . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 51
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 33

   24 LOGICAL_EXP: OP_OP KW_LESS . EXP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 52
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 34

   34 QUIT: OP_OP KW_EXIT . OP_CP

    OP_CP  shift, and go to state 53


state 35

   33 DISPLAY: OP_OP KW_DISP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 54
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 36

    0 $accept: START $end .

    $default  accept


state 37

    3 EXPLIST: EXPLIST EXP .

    $default  reduce using rule 3 (EXPLIST)


state 38

   28 FCALL: OP_OP IDENTIFIER EXP . OP_CP

    OP_CP  shift, and go to state 55


state 39

   16 ARITHMETIC_EXP: OP_OP OP_PLUS EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 56
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 40

   17 ARITHMETIC_EXP: OP_OP OP_MINUS EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 57
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 41

   18 ARITHMETIC_EXP: OP_OP OP_MULT EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 58
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 42

   19 ARITHMETIC_EXP: OP_OP OP_DIV EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 59
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 43

   27 ASSIGNMENT: OP_OP KW_SET IDENTIFIER . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 60
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 44

   29 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER . OP_OP IDENTIFIER OP_CP EXP OP_CP

    OP_OP  shift, and go to state 61


state 45

   30 CONTROL_STATEMENT: OP_OP KW_IF EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 62
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 46

   31 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP . EXP OP_CP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 63
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 47

   32 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP . IDENTIFIER EXP EXP OP_CP EXP OP_CP

    IDENTIFIER  shift, and go to state 64


state 48

   20 LOGICAL_EXP: OP_OP KW_AND EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 65
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 49

   21 LOGICAL_EXP: OP_OP KW_OR EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 66
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 50

   22 LOGICAL_EXP: OP_OP KW_NOT EXP . OP_CP

    OP_CP  shift, and go to state 67


state 51

   23 LOGICAL_EXP: OP_OP KW_EQUAL EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 68
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 52

   24 LOGICAL_EXP: OP_OP KW_LESS EXP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 69
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 53

   34 QUIT: OP_OP KW_EXIT OP_CP .

    $default  reduce using rule 34 (QUIT)


state 54

   33 DISPLAY: OP_OP KW_DISP EXP . OP_CP

    OP_CP  shift, and go to state 70


state 55

   28 FCALL: OP_OP IDENTIFIER EXP OP_CP .

    $default  reduce using rule 28 (FCALL)


state 56

   16 ARITHMETIC_EXP: OP_OP OP_PLUS EXP EXP . OP_CP

    OP_CP  shift, and go to state 71


state 57

   17 ARITHMETIC_EXP: OP_OP OP_MINUS EXP EXP . OP_CP

    OP_CP  shift, and go to state 72


state 58

   18 ARITHMETIC_EXP: OP_OP OP_MULT EXP EXP . OP_CP

    OP_CP  shift, and go to state 73


state 59

   19 ARITHMETIC_EXP: OP_OP OP_DIV EXP EXP . OP_CP

    OP_CP  shift, and go to state 74


state 60

   27 ASSIGNMENT: OP_OP KW_SET IDENTIFIER EXP . OP_CP

    OP_CP  shift, and go to state 75


state 61

   29 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP . IDENTIFIER OP_CP EXP OP_CP

    IDENTIFIER  shift, and go to state 76


state 62

   30 CONTROL_STATEMENT: OP_OP KW_IF EXP EXP . OP_CP

    OP_CP  shift, and go to state 77


state 63

   31 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP EXP . OP_CP EXP OP_CP

    OP_CP  shift, and go to state 78


state 64

   32 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER . EXP EXP OP_CP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 79
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 65

   20 LOGICAL_EXP: OP_OP KW_AND EXP EXP . OP_CP

    OP_CP  shift, and go to state 80


state 66

   21 LOGICAL_EXP: OP_OP KW_OR EXP EXP . OP_CP

    OP_CP  shift, and go to state 81


state 67

   22 LOGICAL_EXP: OP_OP KW_NOT EXP OP_CP .

    $default  reduce using rule 22 (LOGICAL_EXP)


state 68

   23 LOGICAL_EXP: OP_OP KW_EQUAL EXP EXP . OP_CP

    OP_CP  shift, and go to state 82


state 69

   24 LOGICAL_EXP: OP_OP KW_LESS EXP EXP . OP_CP

    OP_CP  shift, and go to state 83


state 70

   33 DISPLAY: OP_OP KW_DISP EXP OP_CP .

    $default  reduce using rule 33 (DISPLAY)


state 71

   16 ARITHMETIC_EXP: OP_OP OP_PLUS EXP EXP OP_CP .

    $default  reduce using rule 16 (ARITHMETIC_EXP)


state 72

   17 ARITHMETIC_EXP: OP_OP OP_MINUS EXP EXP OP_CP .

    $default  reduce using rule 17 (ARITHMETIC_EXP)


state 73

   18 ARITHMETIC_EXP: OP_OP OP_MULT EXP EXP OP_CP .

    $default  reduce using rule 18 (ARITHMETIC_EXP)


state 74

   19 ARITHMETIC_EXP: OP_OP OP_DIV EXP EXP OP_CP .

    $default  reduce using rule 19 (ARITHMETIC_EXP)


state 75

   27 ASSIGNMENT: OP_OP KW_SET IDENTIFIER EXP OP_CP .

    $default  reduce using rule 27 (ASSIGNMENT)


state 76

   29 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER . OP_CP EXP OP_CP

    OP_CP  shift, and go to state 84


state 77

   30 CONTROL_STATEMENT: OP_OP KW_IF EXP EXP OP_CP .

    $default  reduce using rule 30 (CONTROL_STATEMENT)


state 78

   31 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP EXP OP_CP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 85
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 79

   32 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP . EXP OP_CP EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 86
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 80

   20 LOGICAL_EXP: OP_OP KW_AND EXP EXP OP_CP .

    $default  reduce using rule 20 (LOGICAL_EXP)


state 81

   21 LOGICAL_EXP: OP_OP KW_OR EXP EXP OP_CP .

    $default  reduce using rule 21 (LOGICAL_EXP)


state 82

   23 LOGICAL_EXP: OP_OP KW_EQUAL EXP EXP OP_CP .

    $default  reduce using rule 23 (LOGICAL_EXP)


state 83

   24 LOGICAL_EXP: OP_OP KW_LESS EXP EXP OP_CP .

    $default  reduce using rule 24 (LOGICAL_EXP)


state 84

   29 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 87
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 85

   31 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP EXP OP_CP EXP . OP_CP

    OP_CP  shift, and go to state 88


state 86

   32 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP . OP_CP EXP OP_CP

    OP_CP  shift, and go to state 89


state 87

   29 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP . OP_CP

    OP_CP  shift, and go to state 90


state 88

   31 CONTROL_STATEMENT: OP_OP KW_WHILE OP_OP EXP OP_CP EXP OP_CP .

    $default  reduce using rule 31 (CONTROL_STATEMENT)


state 89

   32 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP . EXP OP_CP

    VALUEF      shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    OP_OP       shift, and go to state 3
    KW_TRUE     shift, and go to state 4
    KW_FALSE    shift, and go to state 5

    EXP                go to state 91
    ARITHMETIC_EXP     go to state 10
    LOGICAL_EXP        go to state 11
    BOOLEAN            go to state 12
    ASSIGNMENT         go to state 13
    FCALL              go to state 14
    FUNCTION_DEF       go to state 15
    CONTROL_STATEMENT  go to state 16
    DISPLAY            go to state 17
    QUIT               go to state 18


state 90

   29 FUNCTION_DEF: OP_OP KW_DEFFUN IDENTIFIER OP_OP IDENTIFIER OP_CP EXP OP_CP .

    $default  reduce using rule 29 (FUNCTION_DEF)


state 91

   32 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXP . OP_CP

    OP_CP  shift, and go to state 92


state 92

   32 CONTROL_STATEMENT: OP_OP KW_FOR OP_OP IDENTIFIER EXP EXP OP_CP EXP OP_CP .

    $default  reduce using rule 32 (CONTROL_STATEMENT)
