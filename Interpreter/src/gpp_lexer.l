%{
#include <stdio.h>
#include "gpp_parser.h"  // Include the header file generated by Yacc

int yycolumn = 1; // Column number
%}

%option noyywrap

VALUEF [0-9]+(\.[0-9]+)?
IDENTIFIER [a-zA-Z_][a-zA-Z0-9_]*

COMMENT ;.*

%%

"and"         { return KW_AND; }
"or"          { return KW_OR; }
"not"         { return KW_NOT; }
"equal"       { return KW_EQUAL; }
"less"        { return KW_LESS; }
"set"         { return KW_SET; }
"deffun"      { return KW_DEFFUN; }
"for"         { return KW_FOR; }
"if"          { return KW_IF; }
"exit"        { return KW_EXIT; }
"while"       { return KW_WHILE; }
"disp"        { return KW_DISP; }

"true"        { return KW_TRUE; }
"false"       { return KW_FALSE; }

"+"           { return OP_PLUS; }
"-"           { return OP_MINUS; }
"/"           { return OP_DIV; }
"*"           { return OP_MULT; }
"("           { return OP_OP; }
")"           { return OP_CP; }

{VALUEF}      { yylval.fval = atof(yytext); return VALUEF; }
{IDENTIFIER}  { yylval.sval = strdup(yytext); return IDENTIFIER; }

{COMMENT}     { /* Ignore comments */ }

[ \t\n]+      { yycolumn += yyleng; }  // Ignore whitespace and update column

.             { return printf("SYNTAX_ERROR"); }  // Invalid token

%%